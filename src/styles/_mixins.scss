@use 'variables' as *;

@mixin respond-to($breakpoint) {
    @if $breakpoint == 'mobile-small' {
      @media (max-width: #{$breakpoint-mobile-small}) {
        @content;
      }
    }
    @else if $breakpoint == 'mobile' {
      @media (max-width: #{$breakpoint-mobile}) {
        @content;
      }
    }
    @else if $breakpoint == 'tablet' {
      @media (min-width: #{$breakpoint-tablet}) {
        @content;
      }
    }
    @else if $breakpoint == 'desktop' {
      @media (min-width: #{$breakpoint-desktop}) {
        @content;
      }
    }
    @else if $breakpoint == 'desktop-large' {
      @media (min-width: #{$breakpoint-desktop-large}) {
        @content;
      }
    }
    @else if $breakpoint == 'landscape-mobile' {
      @media (orientation: landscape) and (max-height: 600px) {
        @content;
      }
    }
    @else if $breakpoint == 'landscape-tablet' {
      @media (orientation: landscape) and (min-width: 768px) {
        @content;
      }
    }
  }

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin input-base {
  padding: $spacing-xs;
  border: 2px solid $color-border;
  border-radius: $border-radius-xl;
  font-size: $font-size-base;
  font-family: $font-family-base;
  background: $color-surface;
  color: $color-text-primary;
  transition: border-color $transition-duration ease;

  &:focus {
    outline: none;
    border-color: $color-dark;
    box-shadow: 0 0 0 3px rgba($color-dark, 0.1);
  }

  &::placeholder {
    color: $color-text-muted;
  }

  &:disabled {
    background-color: $color-background-secondary;
    color: $color-text-muted;
    cursor: not-allowed;
  }
}

@mixin appearance($value) {
  -webkit-appearance: $value;
  -moz-appearance: $value;
  appearance: $value;
}

@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}